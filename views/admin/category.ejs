<%- include("partials/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <!-- Add Tailwind CSS CDN -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body>
  <section class="py-8 px-4 mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
      <h2 class="text-2xl font-bold text-gray-800">Category Management</h2>
      <p class="text-gray-600 mt-1">Create and manage product categories</p>
    </div>

   
  

    <!-- Search Bar -->
    <div class="mb-8">
      <form action="/admin/category" method="get" class="flex justify-center">
          <div class="relative w-full max-w-xl flex items-center">
              <div class="relative flex-grow">
                  <input type="text" 
                         class="w-full pl-10 pr-4 py-3 rounded-l-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-sm" 
                         placeholder="Search categories" 
                         name="search"
                         value="<%= searchQuery %>"/>
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                      </svg>
                  </div>
              </div>
              <button class="px-4 py-3 text-white bg-blue-600 hover:bg-blue-700 focus:outline-none" type="submit">
                  Search
              </button>
              <a href="/admin/category" class="ml-2 px-4 py-3 bg-gray-300 text-gray-700 rounded-r-full hover:bg-gray-400">Clear</a>
          </div>
      </form>
  </div>
  
  

    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="p-6">
        <div class="flex flex-col lg:flex-row gap-8">
          <!-- Create Category Form -->
          <div class="lg:w-1/3">
            <div class="bg-gray-50 p-6 rounded-lg border border-gray-200 shadow-sm">
              <h3 class="text-lg font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200">Create New Category</h3>
              <form method="post" action="/admin/addCategory" enctype="multipart/form-data" id="addCategory" class="space-y-4">
                <div>
                  <label for="product_name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
                  <input type="text" name="name" placeholder="Enter category name" 
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                        id="product_name" />
                  <div id="name-error" class="text-red-500 text-xs mt-1"></div>
                </div>
                
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                  <textarea placeholder="Enter category description" name="description" 
                          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                          id="descriptionId" rows="4"></textarea>
                  <div id="description-error" class="text-red-500 text-xs mt-1"></div>
                </div>
                
                <div>
                  <label for="image" class="block text-sm font-medium text-gray-700 mb-1 name " >Image</label>
                  <div class="flex items-center justify-center w-full">
                    <label class="flex flex-col w-full h-32 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                      <div class="flex flex-col items-center justify-center pt-7">
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                        <p class="pt-1 text-sm text-gray-500">Upload category image</p>
                      </div>
                      <input type="file" name="image" class="opacity-0" id="image" accept="image/*" />
                    </label>
                  </div>
                  <div id="image-error" class="text-red-500 text-xs mt-1"></div>
                </div>
                
                <button class="w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md shadow-sm transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50" 
                        type="submit">
                  Create Category
                </button>
              </form>
            </div>
          </div>
          
          <!-- Categories Table -->
          <div class="lg:w-2/3">
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <!-- <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"></th> -->
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Image</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Regular Price</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Offer Price</th>
                 
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <!-- <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">List/Unlist</th> -->
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Edit</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">

                  <% if(categories.length==0){ %>
                    <tr>
                      <td colspan="7" class="text-center fw-bold text-danger">Category not found</td>
                    </tr>
                  <% }else %>

                  <% categories.forEach(category=>{ %>
                  <tr class="hover:bg-gray-50">
                
                    <td class="px-6 py-4 whitespace-nowrap"><img src="/<%= category.image %>" alt="Category Image" class="h-10 w-10 rounded-full object-cover"></td>
                  

                    <!-- <td class="px-6 py-4 whitespace-nowrap">
                      <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                        <svg class="h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                      </div>
                    </td> -->
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= category.name %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= category.description %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= category.regularPrice %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= category.offerPrice %></td>
                    <!-- <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex flex-col space-y-2">
                        <a href="#" class="inline-flex items-center justify-center px-3 py-1.5 bg-cyan-500 text-white text-xs font-medium rounded hover:bg-cyan-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500">
                          Add Offer
                        </a>
                        <a href="#" class="inline-flex items-center justify-center px-3 py-1.5 bg-cyan-500 text-white text-xs font-medium rounded hover:bg-cyan-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500">
                          Remove
                        </a>
                      </div>
                    </td> -->
                    <!-- <td class="px-6 py-4 whitespace-nowrap">
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                        Listed
                      </span>
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800 hidden">
                        Unlisted
                      </span>
                    </td> -->
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex flex-col space-y-2">
                          <!-- Show "List" button when status is true -->
                          <a href="javascript:void(0);" 
                             class="toggle-status inline-flex items-center justify-center px-3 py-1.5 bg-green-500 text-white text-xs font-medium rounded hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500
                             <%= category.status ? '' : 'hidden' %>" 
                             data-id="<%= category._id %>"
                             data-status="list">
                              List
                          </a>
                          
                          <!-- Show "Unlist" button when status is false -->
                          <a href="javascript:void(0);" 
                             class="toggle-status inline-flex items-center justify-center px-3 py-1.5 bg-red-500 text-white text-xs font-medium rounded hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500
                             <%= category.status ? 'hidden' : '' %>" 
                             data-id="<%= category._id %>"
                             data-status="unlist">
                              Unlist
                          </a>
                      </div>
                  </td>
                  
                  
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <!-- Edit Button -->
                <a href="#" id="editBtn" class="editBtn inline-flex items-center justify-center px-3 py-1.5 bg-blue-500 text-white text-xs font-medium rounded hover:bg-blue-600" 
                data-id="<%= category._id %>" 
                data-name="<%= category.name %>" 
                data-description="<%= category.description %>"
                data-regularPrice="<%= category.regularPrice %>"
                data-offerPrice="<%= category.offerPrice %>"
                data-status="<%= category.status %>"> 
                Edit
            </a>
           
            

                          <!-- Modal -->
                          <div id="editModal" class="fixed inset-0 hidden bg-gray-800 bg-opacity-50 flex justify-center items-center">
                            <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
                                <h2 class="text-lg font-semibold mb-4" style="margin-right: 500px;">Edit Category</h2>

                                <!-- Image Upload
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Product Image</label>
                                    <input type="file" id="productImage" class="w-full border p-2 rounded">
                                    <img id="previewImage" src="" class="mt-2 w-24 h-24 object-cover hidden" alt="Product Preview">
                                </div> -->


                                                  <!-- Existing Image Display -->
                          <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700" style="margin-right: 500px;">Current Image</label>
                            <img id="currentImage" src="" class="mt-2 w-24 h-24 object-cover" alt="Current Category Image">
                        </div>

                        <!-- Image Upload -->
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700">Replace Image</label>
                            <input 
                                type="file" 
                                id="productImage" 
                                name="image" 
                                class="w-full border p-2 rounded" 
                                accept="image/*"
                                onchange="previewNewImage(event)"
                            >
                            <img 
                                id="previewImage" 
                                src="" 
                                class="mt-2 w-24 h-24 object-cover hidden" 
                                alt="New Image Preview"
                            >
                        </div>


                                <!-- Name -->
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Name</label>
                                    <input type="text" id="productName" name="name" class="w-full border p-2 rounded" placeholder="Enter product name">
                                </div>

                                <!-- Description -->
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Description</label>
                                    <textarea id="productDescription" name="description" class="w-full border p-2 rounded" placeholder="Enter description"></textarea>
                                </div>

                                <!-- Regular Price -->
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Regular Price</label>
                                    <input type="number" id="regularPrice" name="regularprice" class="w-full border p-2 rounded" placeholder="Enter regular price">
                                </div>

                                <!-- Offer Price -->
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Offer Price</label>
                                    <input type="number" id="offerPrice" name="offerprice" class="w-full border p-2 rounded" placeholder="Enter offer price">
                                </div>

                                <!-- Status -->
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700">Status</label>
                                    <select id="productStatus" class="w-full border p-2 rounded">
                                        <option value="active">List</option>
                                        <option value="inactive">unlist</option>
                                    </select>
                                </div>

                                <!-- Action Buttons -->
                                <div class="mt-4 flex justify-end">
                                    <button id="closeModal" class="px-4 py-2 bg-gray-500 text-white rounded mr-2">Cancel</button>
                                    <button id="saveProduct" class="px-4 py-2 bg-blue-500 text-white rounded">Save</button>
                                </div>
                            </div>
                          </div>


                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="mt-8 flex justify-center">
      <nav class="relative z-0 inline-flex rounded-md shadow-sm" aria-label="Pagination">
          <!-- Previous Button -->
          <% if (currentPage > 1) { %>
              <a href="?page=<%= currentPage - 1 %>&search=<%= searchQuery %>" 
                  class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span class="sr-only">Previous</span>
                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
              </a>
          <% } %>
  
          <!-- Page Numbers -->
          <% for (let i = 1; i <= totalPages; i++) { %>
              <a href="?page=<%= i %>&search=<%= searchQuery %>" 
                  class="relative inline-flex items-center px-4 py-2 border text-sm font-medium 
                      <%= i === currentPage ? 'bg-blue-50 text-blue-600' : 'bg-white text-gray-700 hover:bg-gray-50' %>">
                  <%= i %>
              </a>
          <% } %>
  
          <!-- Next Button -->
          <% if (currentPage < totalPages) { %>
              <a href="?page=<%= currentPage + 1 %>&search=<%= searchQuery %>" 
                  class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span class="sr-only">Next</span>
                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
              </a>
          <% } %>
      </nav>
  </div>
  
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<%- include("partials/footer") %>
<!-- 
<script>
    document.getElementById("addCategory").addEventListener("submit",async function (event) {
        event.preventDefault()
        // const formData=Object.fromEntries(new FormData(this).entries())
        const formData=new FormData(this)
        console.log(formData)
        try {
            const response=await fetch("/admin/createCategory",{
                method:"POST",
                // headers:{"Content-Type":"application/json"},
                // body:JSON.stringify(formData)
                body:formData
               
               
            })
            const result=await response.json()
            if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Category Created!',
                text: result.message || 'Category created successfully!',
                timer: 1500,
                showConfirmButton: false
            }).then(() => {
                window.location.href = result.redirectUrl;
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Failed to Create Category',
                text: result.message || 'Something went wrong!'
            });
        }
            
            
        } catch (error) {
            console.log(error.message)
        }
    })

    document.getElementById("image").addEventListener("change",function(e){
      const fileName=e.target.files[0]?.name
      if(fileName){
        // const fileNameElement = this.parentElement.querySelector("p")
        const fileNameElement = this.closest("label").querySelector("p");
        fileNameElement.textContent=fileName
      }
    })


document.addEventListener("DOMContentLoaded", function() {
    const editButtons = document.querySelectorAll(".editBtn");
    const editModal = document.getElementById("editModal");
    const currentImage=document.getElementById("currentImage")
    const previewImage=document.getElementById("previewImage")

    editButtons.forEach(button => {
        button.addEventListener("click", function() {
            const id = this.getAttribute("data-id");
            document.getElementById("productName").value = this.getAttribute("data-name");
            document.getElementById("productDescription").value = this.getAttribute("data-description");
            document.getElementById("regularPrice").value=this.getAttribute("data-regularPrice")
            document.getElementById("offerPrice").value = this.getAttribute("data-offerPrice");
            document.getElementById("productStatus").value = this.getAttribute("data-status");
            document.getElementById("saveProduct").setAttribute("data-id", id);
            editModal.classList.remove("hidden");
        });
    });

    document.getElementById("saveProduct").addEventListener("click", function() {
        const id = this.getAttribute("data-id");
        const updatedData = {
            name: document.getElementById("productName").value,
            description: document.getElementById("productDescription").value,
            regularPrice:document.getElementById("regularPrice").value,
            offerPrice: document.getElementById("offerPrice").value,
            status: document.getElementById("productStatus").value
        };

        fetch(`/admin/editCategory/${id}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(updatedData)
        })
        .then(response => response.json())  
        .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Category Updated!',
                text: data.message || 'Category updated successfully!',
                timer: 1500,
                showConfirmButton: false
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Update Failed',
                text: data.message || 'Error updating category.',
            });
        }
    })
        .catch(error => console.error("Error:", error));
    });

    document.getElementById("closeModal").addEventListener("click", function() {
        editModal.classList.add("hidden");
    });
});

</script> -->

<script>


document.getElementById("addCategory").addEventListener("submit",async function (event) {
        event.preventDefault()
        // const formData=Object.fromEntries(new FormData(this).entries())
        const formData=new FormData(this)
        console.log(formData)
        try {
            const response=await fetch("/admin/createCategory",{
                method:"POST",
                // headers:{"Content-Type":"application/json"},
                // body:JSON.stringify(formData)
                body:formData
               
               
            })
            const result=await response.json()
            if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Category Created!',
                text: result.message || 'Category created successfully!',
                timer: 1500,
                showConfirmButton: false
            }).then(() => {
                window.location.href = result.redirectUrl;
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Failed to Create Category',
                text: result.message || 'Something went wrong!'
            });
        }
            
            
        } catch (error) {
            console.log(error.message)
        }
    })

    document.getElementById("image").addEventListener("change",function(e){
      const fileName=e.target.files[0]?.name
      if(fileName){
        // const fileNameElement = this.parentElement.querySelector("p")
        const fileNameElement = this.closest("label").querySelector("p");
        fileNameElement.textContent=fileName
      }
    })









  document.addEventListener("DOMContentLoaded", function() {
      const editButtons = document.querySelectorAll(".editBtn");
      const editModal = document.getElementById("editModal");
      const currentImage = document.getElementById("currentImage");
      const previewImage = document.getElementById("previewImage");
  
      editButtons.forEach(button => {
          button.addEventListener("click", function() {
              const id = this.getAttribute("data-id");
              const name = this.getAttribute("data-name");
              const description = this.getAttribute("data-description");
              const regularPrice = this.getAttribute("data-regularPrice");
              const offerPrice = this.getAttribute("data-offerPrice");
              const status = this.getAttribute("data-status");
              
              // Assuming the image path is stored in a data attribute or you can modify to get it from the table
              const imagePath = this.closest('tr').querySelector('img').src;
  
              // Populate input fields
              document.getElementById("productName").value = name;
              document.getElementById("productDescription").value = description;
              document.getElementById("regularPrice").value = regularPrice;
              document.getElementById("offerPrice").value = offerPrice;
              document.getElementById("productStatus").value = status;
  
              // Set current image
              currentImage.src = imagePath;
              currentImage.classList.remove("hidden");
  
              // Reset preview image
              previewImage.src = "";
              previewImage.classList.add("hidden");
  
              // Set data ID for saving
              document.getElementById("saveProduct").setAttribute("data-id", id);
  
              // Show modal
              editModal.classList.remove("hidden");
          });
      });
  
      // Function to preview new image
      window.previewNewImage = function(event) {
          const file = event.target.files[0];
          if (file) {
              const reader = new FileReader();
              reader.onload = function(e) {
                  currentImage.classList.add("hidden");
                  previewImage.src = e.target.result;
                  previewImage.classList.remove("hidden");
              };
              reader.readAsDataURL(file);
          }
      };
  
      // Existing save and close modal logic remains the same
      document.getElementById("saveProduct").addEventListener("click", function() {
          const id = this.getAttribute("data-id");
          const formData = new FormData();
          
          // Add text fields
          formData.append('name', document.getElementById("productName").value);
          formData.append('description', document.getElementById("productDescription").value);
          formData.append('regularPrice', document.getElementById("regularPrice").value);
          formData.append('offerPrice', document.getElementById("offerPrice").value);
          formData.append('status', document.getElementById("productStatus").value);
          
          // Add image if a new one is selected
          const imageFile = document.getElementById("productImage").files[0];
          if (imageFile) {
              formData.append('image', imageFile);
          }

          formData.forEach((value, key) => {
    console.log(key, value);
});



  
          fetch(`/admin/editCategory/${id}`, {
              method: "POST",
            
              body: formData  // Use FormData instead of JSON
          })
          .then(response => response.json())  
          .then(data => {
              if (data.success) {
                  Swal.fire({
                      icon: 'success',
                      title: 'Category Updated!',
                      text: data.message || 'Category updated successfully!',
                      timer: 1500,
                      showConfirmButton: false
                  }).then(() => {
                      location.reload();
                  });
              } else {
                  Swal.fire({
                      icon: 'error',
                      title: 'Update Failed',
                      text: data.message || 'Error updating category.',
                  });
              }
          })
          .catch(error => console.error("Error:", error));
      });
  
      document.getElementById("closeModal").addEventListener("click", function() {
          editModal.classList.add("hidden");
      });
  });
  </script>