<%- include("partials/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <div class="bg-white shadow-sm">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-6">
                <div class="flex items-center">
                    <a href="/viewProfile" class="text-indigo-600 hover:text-indigo-800 mr-4">
                        <i class="fas fa-arrow-left text-xl"></i>
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Edit Profile</h1>
                </div>
            </div>
        </div>
    </div>

    <!-- Breadcrumb -->
    <div class="bg-white border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <nav class="flex py-4" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-3">
                    <li class="inline-flex items-center">
                        <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600">
                            <i class="fas fa-home mr-2"></i>
                            Home
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <i class="fas fa-chevron-right text-gray-400 mx-2"></i>
                            <a href="/viewProfile" class="ml-1 text-sm font-medium text-gray-700 hover:text-indigo-600">Profile</a>
                        </div>
                    </li>
                    <li aria-current="page">
                        <div class="flex items-center">
                            <i class="fas fa-chevron-right text-gray-400 mx-2"></i>
                            <span class="ml-1 text-sm font-medium text-gray-500">Edit Profile</span>
                        </div>
                    </li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-3xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div class="bg-white shadow-xl rounded-lg overflow-hidden">
            <!-- Profile Header -->
            <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-8">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="h-20 w-20 rounded-full bg-white bg-opacity-20 flex items-center justify-center">
                            <% if (user?.image) { %>
                                <img src="<%= user.image %>" alt="Profile" class="h-20 w-20 rounded-full object-cover border-4 border-white">
                            <% } else { %>
                                <i class="fas fa-user text-3xl text-white"></i>
                            <% } %>
                        </div>
                    </div>
                    <div class="ml-6">
                        <h2 class="text-2xl font-bold text-white"><%= user?.fullname || 'User' %></h2>
                        <p class="text-indigo-100"><%= user?.email || '' %></p>
                    </div>
                </div>
            </div>

            <!-- Form Section -->
            <div class="px-6 py-8">
                <form id="editProfileForm" class="space-y-6">
                    <!-- Name Field -->
                    <div>
                        <label for="fullname" class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-user mr-2 text-indigo-500"></i>
                            Full Name
                        </label>
                        <div class="relative">
                            <input 
                                type="text" 
                                id="fullname" 
                                name="fullname" 
                                value="<%= user?.fullname || '' %>"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200 ease-in-out"
                                placeholder="Enter your full name"
                                required
                            >
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                <i class="fas fa-user text-gray-400"></i>
                            </div>
                        </div>
                        <p class="mt-1 text-sm text-gray-500">This will be displayed as your profile name</p>
                    </div>

                    <!-- Mobile Number Field -->
                    <div>
                        <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-phone mr-2 text-indigo-500"></i>
                            Mobile Number
                        </label>
                        <div class="relative">
                            <input 
                                type="tel" 
                                id="phoneNumber" 
                                name="phoneNumber" 
                                value="<%= user?.phoneNumber || '' %>"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-200 ease-in-out"
                                placeholder="Enter your mobile number"
                                pattern="[0-9]{10}"
                                
                            >
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                <i class="fas fa-phone text-gray-400"></i>
                            </div>
                        </div>
                        <p class="mt-1 text-sm text-gray-500">Enter a 10-digit mobile number</p>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex flex-col sm:flex-row gap-4 pt-6">
                        <button 
                            type="submit" 
                            class="flex-1 bg-indigo-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 ease-in-out transform hover:scale-105"
                        >
                            <i class="fas fa-save mr-2"></i>
                            Save Changes
                        </button>
                        <a 
                            href="/viewProfile" 
                            class="flex-1 bg-gray-200 text-gray-800 py-3 px-6 rounded-lg font-medium hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition duration-200 ease-in-out text-center"
                        >
                            <i class="fas fa-times mr-2"></i>
                            Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Help Section -->
        <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6">
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <i class="fas fa-info-circle text-blue-500 text-xl"></i>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-blue-800">Profile Information</h3>
                    <div class="mt-2 text-sm text-blue-700">
                        <ul class="list-disc list-inside space-y-1">
                            <li>Your full name will be used for order deliveries and communications</li>
                            <li>Mobile number should be active as it may be used for order updates</li>
                            <li>Make sure all information is accurate to avoid delivery issues</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center hidden z-50">
        <div class="bg-white rounded-lg p-6 max-w-sm w-full mx-4">
            <div class="flex items-center space-x-4">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
                <p class="text-gray-700">Updating profile...</p>
            </div>
        </div>
    </div>

    <!-- Success/Error Toast -->
    <div id="toast" class="fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out z-50">
        <div class="flex items-center">
            <i class="fas fa-check-circle mr-2"></i>
            <span id="toastMessage">Profile updated successfully!</span>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('editProfileForm');
            const loadingOverlay = document.getElementById('loadingOverlay');
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toastMessage');

            // Form validation
            function validateForm() {
                const fullname = document.getElementById('fullname').value.trim();
                const phoneNumber = document.getElementById('phoneNumber').value.trim();

                // Name validation
                const nameRegex = /^[a-zA-ZÀ-ÖØ-öø-ÿ\s'-]{2,50}$/;
                if (!nameRegex.test(fullname)) {
                    showToast('Name should contain only letters, spaces, hyphens, or apostrophes (2-50 characters)', 'error');
                    return false;
                }

                // Phone validation
                const phoneRegex = /^\d{10}$/;
                if (!phoneRegex.test(phoneNumber)) {
                    showToast('Please enter a valid 10-digit mobile number', 'error');
                    return false;
                }

                return true;
            }

            // Show toast notification
            function showToast(message, type = 'success') {
                toastMessage.textContent = message;
                
                // Change color based on type
                if (type === 'error') {
                    toast.className = toast.className.replace('bg-green-500', 'bg-red-500');
                    toast.querySelector('i').className = 'fas fa-exclamation-circle mr-2';
                } else {
                    toast.className = toast.className.replace('bg-red-500', 'bg-green-500');
                    toast.querySelector('i').className = 'fas fa-check-circle mr-2';
                }

                // Show toast
                toast.classList.remove('translate-x-full');
                
                // Hide after 3 seconds
                setTimeout(() => {
                    toast.classList.add('translate-x-full');
                }, 3000);
            }

            // Form submission
            form.addEventListener('submit', async function(e) {
                e.preventDefault();

                if (!validateForm()) {
                    return;
                }

                // Show loading
                loadingOverlay.classList.remove('hidden');

                const formData = {
                    fullname: document.getElementById('fullname').value.trim(),
                    phoneNumber: document.getElementById('phoneNumber').value.trim()
                };

                try {
                    const response = await fetch('/updateProfile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    });

                    const result = await response.json();

                    if (result.success) {
                        showToast('Profile updated successfully!', 'success');
                        // Redirect after success
                        setTimeout(() => {
                            window.location.href = '/viewProfile';
                        }, 2000);
                    } else {
                        showToast(result.message || 'Failed to update profile', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showToast('An error occurred. Please try again.', 'error');
                } finally {
                    // Hide loading
                    loadingOverlay.classList.add('hidden');
                }
            });

            // Real-time validation feedback
            document.getElementById('fullname').addEventListener('input', function() {
                const nameRegex = /^[a-zA-ZÀ-ÖØ-öø-ÿ\s'-]{2,50}$/;
                if (this.value.trim() && !nameRegex.test(this.value.trim())) {
                    this.classList.add('border-red-500');
                    this.classList.remove('border-green-500');
                } else if (this.value.trim()) {
                    this.classList.add('border-green-500');
                    this.classList.remove('border-red-500');
                } else {
                    this.classList.remove('border-red-500', 'border-green-500');
                }
            });

            document.getElementById('phoneNumber').addEventListener('input', function() {
                const phoneRegex = /^\d{10}$/;
                if (this.value.trim() && !phoneRegex.test(this.value.trim())) {
                    this.classList.add('border-red-500');
                    this.classList.remove('border-green-500');
                } else if (this.value.trim()) {
                    this.classList.add('border-green-500');
                    this.classList.remove('border-red-500');
                } else {
                    this.classList.remove('border-red-500', 'border-green-500');
                }
            });
        });
    </script>
</body>
</html>