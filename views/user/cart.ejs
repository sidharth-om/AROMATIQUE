<%- include("partials/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart | YourStore</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100">
    <!-- Breadcrumb -->
    <div class="bg-white py-2 shadow-sm">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-sm text-gray-500 flex items-center space-x-2">
                <a href="index.html" class="hover:text-blue-600">Home</a>
                <span class="mx-2">></span>
                <a href="#" class="hover:text-blue-600">Shop</a>
                <span class="mx-2">></span>
                <span class="text-gray-800 font-medium">Your Cart</span>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="flex flex-col lg:flex-row gap-6">
            <!-- Cart Items -->
            <div class="lg:w-3/4 bg-white rounded-lg shadow-md p-4 sm:p-6">
                <h2 class="text-xl sm:text-2xl font-bold mb-6">Shopping Cart</h2>
                
                <div class="overflow-x-auto">
                    <table class="w-full min-w-[320px]">
                        <thead>
                            <tr class="border-b">
                                <th class="pb-4 text-left text-sm sm:text-base">Product</th>
                                <th class="pb-4 text-center text-sm sm:text-base">Price</th>
                                <th class="pb-4 text-center text-sm sm:text-base">Quantity</th>
                                <th class="pb-4 text-center text-sm sm:text-base">Subtotal</th>
                                <th class="pb-4 text-center text-sm sm:text-base">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cart && cart.items && cart.items.length > 0) { %>
                                <% cart.items.forEach((item, index) => { %>
                            <tr class="border-b hover:bg-gray-50">
                                <td class="py-4">
                                    <div class="flex items-center flex-col sm:flex-row">
                                        <img src="<%= item.productId.images[0] %>" alt="Product" class="w-16 h-16 sm:w-20 sm:h-20 object-cover rounded mb-2 sm:mb-0 sm:mr-4">
                                        <div class="text-center sm:text-left">
                                            <h3 class="font-medium text-sm sm:text-base"><%= item.productId.name %></h3>
                                            <p class="text-xs sm:text-sm text-gray-600"><%= item.productId.description %></p>
                                            <% if (item.volume) { %>
                                                <p class="text-xs sm:text-sm text-gray-500">Volume: <%= item.volume %>ml</p>
                                            <% } %>
                                        </div>
                                    </div>
                                </td>
                                <td class="py-4 text-center">
                                    <div>
                                        <% 
                                        const variant = item.productId.variants.find(v => v.volume === item.volume);
                                        const regularPrice = variant ? variant.regularPrice : 0;
                                        const productOffer = item.productId.offer || 0;
                                        const categoryOffer = item.productId.categoryId.offer || 0;
                                        const maxOffer = Math.max(productOffer, categoryOffer);
                                        const discountAmount = regularPrice * (maxOffer / 100);
                                        const discountedPrice = regularPrice - discountAmount;
                                        const finalPrice = discountedPrice;
                                        %>
                                        <% if (maxOffer > 0) { %>
                                            <p class="font-medium text-red-600 text-sm sm:text-base">₹<%= Math.round(finalPrice.toFixed(2)) %></p>
                                            <p class="text-xs sm:text-sm text-gray-500 line-through">₹<%= Math.round(regularPrice.toFixed(2)) %></p>
                                            <p class="text-xs sm:text-sm text-green-600">-<%= maxOffer %>% off</p>
                                        <% } else { %>
                                            <p class="font-medium text-sm sm:text-base">₹<%= Math.round(regularPrice.toFixed(2)) %></p>
                                        <% } %>
                                    </div>
                                </td>
                                <td class="py-4 text-center">
                                    <div class="flex items-center justify-center">
                                        <button 
                                            onclick="changeQuantity('<%= item.productId._id %>', <%= item.quantity %>, -1, <%= finalPrice %>, <%= index %>, <%= variant.quantity %>, <%= regularPrice %>, <%= maxOffer %>)" 
                                            class="w-8 h-8 rounded-l bg-gray-200 hover:bg-gray-300 flex items-center justify-center">
                                            <i class="fas fa-minus text-sm"></i>
                                        </button>
                                        <input 
                                            type="text" 
                                            id="cartProductQuantity<%= index %>" 
                                            class="w-12 h-8 border-t border-b border-gray-300 text-center" 
                                            value="<%= item.quantity %>" 
                                            readonly>
                                        <button 
                                            onclick="changeQuantity('<%= item.productId._id %>', <%= item.quantity %>, 1, <%= finalPrice %>, <%= index %>, <%= variant.quantity %>, <%= regularPrice %>, <%= maxOffer %>)" 
                                            class="w-8 h-8 rounded-r bg-gray-200 hover:bg-gray-300 flex items-center justify-center">
                                            <i class="fas fa-plus text-sm"></i>
                                        </button>
                                    </div>
                                </td>
                                <td class="py-4 text-center font-medium">
                                    <% 
                                    const subtotal = finalPrice * item.quantity;
                                    %>
                                    ₹<span id="subTotal<%= index %>"><%= Math.round(subtotal.toFixed(2)) %></span>
                                    <% if (maxOffer > 0) { %>
                                        <p class="text-xs sm:text-sm text-green-600">Saved: ₹<span id="savedAmount<%= index %>"><%= Math.round((discountAmount * item.quantity).toFixed(2)) %></span></p>
                                    <% } %>
                                </td>
                                <td class="py-4 text-center">
                                    <button onclick="confirmRemove('<%= item.productId._id %>')" class="text-red-500 hover:text-red-700">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="py-8 text-center">
                                        <div class="flex flex-col items-center">
                                            <img src="/api/placeholder/120/120" alt="Empty Cart" class="w-24 h-24 mb-4">
                                            <p class="text-lg font-medium text-gray-600 mb-2">Your cart is empty</p>
                                            <p class="text-sm text-gray-500 mb-4">Add items to your cart to continue shopping</p>
                                            <a href="/" class="bg-blue-600 text-white py-2 px-6 rounded-md hover:bg-blue-700">Continue Shopping</a>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                
                <div class="mt-6 flex justify-between items-center">
                    <a href="/shopping" class="flex items-center text-blue-600 hover:text-blue-800">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Continue Shopping
                    </a>
                </div>
            </div>
            
            <%
            let totalAmount = 0;
            let totalRegularAmount = 0;
            let totalSavings = 0;
            let itemCount = 0;
            let deliveryCharge = 0;

            if (cart && cart.items && cart.items.length > 0) {
                cart.items.forEach(item => {
                    const variant = item.productId.variants.find(v => v.volume === item.volume);
                    const regularPrice = variant ? variant.regularPrice : 0;
                    const productOffer = item.productId.offer || 0;
                    const categoryOffer = item.productId.categoryId.offer || 0;
                    const maxOffer = Math.max(productOffer, categoryOffer);
                    const discountAmount = regularPrice * (maxOffer / 100);
                    const discountedPrice = regularPrice - discountAmount;
                    totalRegularAmount += regularPrice * item.quantity;
                    totalAmount += discountedPrice * item.quantity;
                    totalSavings += discountAmount * item.quantity;
                    itemCount += item.quantity;
                });
                deliveryCharge = totalAmount < 1000 ? 40 : 0;
                totalAmount += deliveryCharge;
            }
            %>

            <!-- RIGHT SIDEBAR -->
            <div class="lg:w-1/4">
                <div class="bg-white rounded-lg shadow-md p-4 sm:p-6">
                    <h2 class="text-xl sm:text-2xl font-bold mb-4">PRICE DETAILS</h2>
                    <div class="border-t pt-4">
                        <div class="flex justify-between py-2">
                            <span class="text-gray-600 text-sm sm:text-base">Price (<span id="itemCount"><%= itemCount %></span> items)</span>
                            <span class="text-sm sm:text-base">₹<span id="totalRegularAmount"><%= Math.round(totalRegularAmount.toFixed(2)) %></span></span>
                        </div>
                        <div class="flex justify-between py-2">
                            <span class="text-gray-600 text-sm sm:text-base">Discount</span>
                            <span class="text-green-600 text-sm sm:text-base">- ₹<span id="totalSavings"><%= Math.round(totalSavings.toFixed(2)) %></span></span>
                        </div>
                        <div class="flex justify-between py-2">
                            <span class="text-gray-600 text-sm sm:text-base">Delivery Charges</span>
                            <span id="deliveryCharge" class="<%= deliveryCharge === 0 ? 'text-green-600' : '' %> text-sm sm:text-base">
                                <%= deliveryCharge === 0 ? 'FREE' : '₹' + deliveryCharge.toFixed(2) %>
                            </span>
                        </div>
                        <div class="flex justify-between py-4 border-t border-dashed font-bold">
                            <span class="text-sm sm:text-base">Total Amount</span>
                            <span class="text-sm sm:text-base">₹<span id="total"><%= Math.round(totalAmount.toFixed(2)) %></span></span>
                        </div>
                        <div class="text-green-600 text-xs sm:text-sm mb-4">You'll save ₹<span id="totalSavingsText"><%= totalSavings.toFixed(2) %></span> on this order</div>
                    </div>
                    <button onclick="window.location.href='/checkout'" class="w-full bg-orange-500 hover:bg-orange-600 text-white py-3 rounded-md font-medium text-sm sm:text-base">
                        PLACE ORDER
                    </button>
                </div>

                <div class="mt-4 bg-white rounded-lg shadow-md p-4 sm:p-6">
                    <div class="flex items-center">
                        <i class="fas fa-shield-alt text-gray-500 mr-2"></i>
                        <p class="text-xs sm:text-sm text-gray-600">Safe and Secure Payments. 100% Authentic products.</p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-8 mt-8">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
                <div>
                    <h3 class="text-lg font-bold mb-4">ABOUT</h3>
                    <ul class="space-y-2">
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Contact Us</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">About Us</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Careers</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Press</a></li>
                    </ul>
                </div>
                <div>
                    <h3 class="text-lg font-bold mb-4">HELP</h3>
                    <ul class="space-y-2">
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Payments</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Shipping</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Cancellation & Returns</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">FAQ</a></li>
                    </ul>
                </div>
                <div>
                    <h3 class="text-lg font-bold mb-4">POLICY</h3>
                    <ul class="space-y-2">
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Return Policy</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Terms Of Use</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Security</a></li>
                        <li><a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base">Privacy</a></li>
                    </ul>
                </div>
                <div>
                    <h3 class="text-lg font-bold mb-4">SOCIAL</h3>
                    <div class="flex space-x-4">
                        <a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-gray-300 hover:text-white text-sm sm:text-base"><i class="fab fa-youtube"></i></a>
                    </div>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-8 pt-6 text-center">
                <p class="text-sm sm:text-base">© 2025 Aromatique. All Rights Reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Store product data for calculations
        const productData = {};
        <% if (cart && cart.items && cart.items.length > 0) { %>
            <% cart.items.forEach((item, index) => { %>
                <%
                const variant = item.productId.variants.find(v => v.volume === item.volume);
                const regularPrice = variant ? variant.regularPrice : 0;
                const productOffer = item.productId.offer || 0;
                const categoryOffer = item.productId.categoryId.offer || 0;
                const maxOffer = Math.max(productOffer, categoryOffer);
                const discountAmount = regularPrice * (maxOffer / 100);
                const discountedPrice = regularPrice - discountAmount;
                const finalPrice = discountedPrice;
                %>
                productData['<%= index %>'] = {
                    regularPrice: <%= regularPrice %>,
                    finalPrice: <%= finalPrice %>,
                    maxOffer: <%= maxOffer %>,
                    discountAmount: <%= discountAmount %>
                };
            <% }); %>
        <% } %>

        async function changeQuantity(productId, cartQuantity, count, productPrice, i, productStock, regularPrice, maxOffer) {
            const cartProductQuantityElement = document.getElementById(`cartProductQuantity${i}`);
            const subtotalElement = document.getElementById(`subTotal${i}`);
            const savedAmountElement = document.getElementById(`savedAmount${i}`);
            
            let currentQuantity = parseInt(cartProductQuantityElement.value);
            
            if (currentQuantity + count > 6) {
                Swal.fire({ title: 'Limit Exceeded!', text: 'You can only add up to 6 items.', icon: 'error', timer: 3000 });
                return;
            }
        
            const newQuantity = currentQuantity + count;
        
            if (count === -1 && newQuantity < 1) return;
        
            if (count === 1 && newQuantity > productStock) {
                Swal.fire({ title: 'Out of Stock!', text: 'Product is out of stock.', icon: 'error', timer: 3000 });
                return;
            }
        
            // Update UI immediately
            cartProductQuantityElement.value = newQuantity;
            
            // Calculate new subtotal and savings for this item
            const newSubtotal = (newQuantity * productPrice).toFixed(2);
            subtotalElement.innerText = newSubtotal;
            
            if (savedAmountElement) {
                const newSavedAmount = (newQuantity * (regularPrice - productPrice)).toFixed(2);
                savedAmountElement.innerText = newSavedAmount;
            }
            
            // Update the product data for this item
            productData[i].quantity = newQuantity;
            
            // Recalculate the entire cart
            recalculateCartTotals();
        
            // Send update to backend
            try {
                const res = await fetch('/updateCartQuantity', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId, quantity: newQuantity })
                });
        
                const data = await res.json();
        
                if (!data.success) {
                    Swal.fire({ title: 'Error', text: data.message, icon: 'error', timer: 3000 });
                }
            } catch (err) {
                console.error(err);
                Swal.fire({ title: 'Error', text: 'Something went wrong!', icon: 'error', timer: 3000 });
            }
        }
        
        function recalculateCartTotals() {
            let totalRegularAmount = 0;
            let totalAmount = 0;
            let totalSavings = 0;
            let itemCount = 0;
            
            // Calculate totals based on all items
            for (const index in productData) {
                const data = productData[index];
                const quantity = parseInt(document.getElementById(`cartProductQuantity${index}`).value);
                
                totalRegularAmount += data.regularPrice * quantity;
                totalAmount += data.finalPrice * quantity;
                totalSavings += data.discountAmount * quantity;
                itemCount += quantity;
            }
            
            // Calculate delivery charge
            const deliveryCharge = totalAmount < 1000 ? 40 : 0;
            totalAmount += deliveryCharge;
            
            // Update the UI with new totals
            document.getElementById('itemCount').textContent = itemCount;
            document.getElementById('totalRegularAmount').textContent = Math.round(totalRegularAmount.toFixed(2));
            document.getElementById('totalSavings').textContent = Math.round(totalSavings.toFixed(2));
            document.getElementById('totalSavingsText').textContent = totalSavings.toFixed(2);
            
            const deliveryChargeElement = document.getElementById('deliveryCharge');
            deliveryChargeElement.textContent = deliveryCharge === 0 ? 'FREE' : `₹${deliveryCharge.toFixed(2)}`;
            deliveryChargeElement.className = deliveryCharge === 0 ? 'text-green-600 text-sm sm:text-base' : 'text-sm sm:text-base';
            
            document.getElementById('total').textContent = Math.round(totalAmount.toFixed(2));
        }
    
        async function confirmRemove(productId) {
            try {
                const response = await fetch(`/deleteCart/${productId}`, {
                    method: "DELETE",
                    headers: {"Content-Type": "application/json"},
                });
                
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        title: 'Success',
                        text: result.message,
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: result.message,
                        icon: 'error',
                        timer: 3000
                    });
                }
            } catch (error) {
                console.error(error);
                Swal.fire({
                    title: 'Error',
                    text: 'Something went wrong!',
                    icon: 'error',
                    timer: 3000
                });
            }
        }

        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get('message');

        if (message) {
            Swal.fire({
                icon: 'warning',
                title: 'Stock Issue',
                text: message,
                confirmButtonText: 'OK'
            });
        }
    </script>
</body>
</html>